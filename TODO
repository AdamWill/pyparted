- autoconf/automake the entire tree
      'make install' and make sure Python modules are installed correctly

- use disttools from Python to do as much work as possible

- new native Python classes on top of _ped (going to require a bit of
  thought to figure out what sort of API we want for the 'parted' module,
  the following are just ideas):
      Device
      Disk
      Partition
      Filesystem
      Constraint
      Label

- Walk through all of the src/py*.c files and make sure libparted exceptions
  are captured and filtered back up through Python.  Will need to define some
  sane Python exception classes for libparted's exceptions.

- Handle exceptions from libparted and pass to Python as necessary.  The
  PED_ASSERT things are where libparted aborts, so we may want to catch things
  before it goes in to libparted so we can throw an exception rather than
  letting the library abort().  The ped_exception_throw() instances are all
  libparted's own exception-like system.

- Handle exceptions throughout the _ped module code.  Unique exceptions as
  much as possible.

- Make sure PyMemberDef, PyMethodDef, PyGetSetDef, and PyTypeObject
  structures all have docstrings:
      include/pydisk.h
      include/pytimer.h

- Rename modules under _ped to use all lowercase names.  Make sure all classes
  are named with studly caps (e.g., BigGiantWorthlessClass)

- Implement existing pyparted module on top of _ped, but mark it all as
  deprecated.
      class PedDevice
          get()
          open()
          close()
          sync()
          disk_probe()
          is_busy()
          geometry_new()
          constraint_any()
          disk_new_fresh()
          destroy()
      class PedDisk
          new()
          check_feature()
          next_partition()
          deletepartition()
          delete_all()
          add_partition()
          get_partition()
          get_partition_by_sector()
          partition_new()
          minimize_extended_partition()
          maximize_partition()
          get_primary_partition_count()
          get_last_partition_num()
          commit()
      class PedPartition
          is_flag_available()
          get_flag()
          set_flag()
          is_active()
          set_system()
          set_name()
          get_name()
          is_busy()
      class PedFileSystem
          check()
          copy()
          resize()
          get_resize_constraint()
      class PedFileSystemTypeMethods
          probe_specific()
      class PedConstraint
          duplicate()

      exception_set_handler()

- Figure out what, if anything, we can do with timers.  They are optional in
  libparted, but do we want to support them in pyparted?

- Error handling in the get and set methods.

- Free memory in error handling cases.

- Exception handling:
      - Audit error messages to make them more useful.

- Test cases:
    _ped.Alignment
    _ped.CHSGeometry
    _ped.Constraint
    _ped.Device
    _ped.Disk
    _ped.DiskType
    _ped.FileSystem
    _ped.FileSystemType
    _ped.Geometry
    _ped.Partition
    _ped.Timer
    _ped.unit_format_custom_byte
    _ped.unit_format_byte
    _ped.unit_format_custom
    _ped.unit_format
    _ped.unit_get_size
    _ped.unit_parse
    _ped.unit_parse_custom
    _ped.get_device
    _ped.probe_all_devices
    _ped.free_all_devices
    _ped.constraint_new_from_min_max
    _ped.constraint_new_from_min
    _ped.constraint_new_from_max
    _ped.constraint_any
    _ped.constraint_exact
    _ped.file_system_probe
    _ped.file_system_probe_specific
    _ped.flag_get_next

- Add garbage collection support code to the different PyTypeObjects.
  http://docs.python.org/c-api/gcsupport.html#supporting-cycle-detection
      pygeom.h
      pynatmath.h
      pytimer.h

- Use PyObject_GC_Del()

- Should we use Py_XDECREF() or PyObject_GC_Del() for failures in convert.c

- destroy() methods don't seem to be destroying the Python object.

- Make sure this new code works in Python 3000

- Look through all PyTypeObject objects and see where we can expand
  their functionality.  Can we add str() support, for instance.

- Audit all of the tp_flags and make sure we are only using the ones
  we should be using (DEFAULT may be inappropriate).

- The git repository has a missing ref in it and it causes git-fetch to
  choke all the time.  Figure out how to remove this from the git repo.
      error: unable to find 09467a8feaa343e6ea79bdeebf3c70834d28941c
      fatal: object 09467a8feaa343e6ea79bdeebf3c70834d28941c not found

... and much much more
