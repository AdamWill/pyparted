- autoconf/automake the entire tree
      'make maintainerclean' should work
      'make distclean' should work
      'make install'
      autogenerate the pyparted.spec example file

- new native Python classes on top of _ped
      Device
      Disk
      Partition
      Filesystem
      Constraint
      Label

- Walk through all of the src/py*.c files and make sure libparted exceptions
  are captured and filtered back up through Python.  Will need to define some
  sane Python exception classes for libparted's exceptions.

- Remove the ENUM() macro because using cpp for that stuff is annoying.  Can't
  grep!

- Implement existing pyparted module on top of _ped, but mark it all as
  deprecated.
      class PedDevice
      class PedDisk
      device_get()
      disk_type_get()
      disk_type_get_next()
      error()
      exception_set_handler()
      file_system_type_get()
      file_system_type_get_next()
      partition_flag_get_by_name()
      partition_flag_get_name()
      partition_flag_next()

- Handle exceptions from libparted and pass to Python as necessary.  These
  are all of the PED_ASSERT things in libparted.

- Do the _ped.X() types for things like PedSector, PedUnit and other things
  where they just have the val attribute, do we need get/set methods?  I
  think so for things like bounds checking and type checking.

- unit.h:
      py_ped_unit_parse
      py_ped_unit_parse_custom

- exception.h:
      _ped.Exception
      _ped.ExceptionType
      _ped.ExceptionOption
      py_ped_exception_get_type_string
      py_ped_exception_get_option_string
      py_ped_exception_set_handler
      py_ped_exception_get_handler
      py_ped_exception_default_handler
      py_ped_exception_throw
      py_ped_exception_rethrow
      py_ped_exception_catch
      py_ped_exception_fetch_all
      py_ped_exception_leave_all

- timer.h:
      py_ped_timer_new

- Make sure _ped module has Python docstrings galore

... and much much more
